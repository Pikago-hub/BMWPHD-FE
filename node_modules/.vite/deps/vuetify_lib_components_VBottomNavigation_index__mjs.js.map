{
  "version": 3,
  "sources": ["../../vuetify/src/components/VBottomNavigation/VBottomNavigation.tsx"],
  "sourcesContent": ["// Styles\nimport './VBottomNavigation.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { provideDefaults } from '@/composables/defaults'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, useRender } from '@/util'\n\n// Types\nimport { VBtnToggleSymbol } from '../VBtnToggle/VBtnToggle'\n\nexport const VBottomNavigation = defineComponent({\n  name: 'VBottomNavigation',\n\n  props: {\n    bgColor: String,\n    color: String,\n    grow: Boolean,\n    mode: {\n      type: String,\n      validator: (v: any) => !v || ['horizontal', 'shift'].includes(v),\n    },\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeLayoutItemProps({ name: 'bottom-navigation' }),\n    ...makeTagProps({ tag: 'header' }),\n    ...makeGroupProps({\n      modelValue: true,\n      selectedClass: 'v-btn--selected',\n    }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme()\n    const { borderClasses } = useBorder(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const height = computed(() => (\n      Number(props.height) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ))\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { layoutItemStyles } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: computed(() => 'bottom'),\n      layoutSize: computed(() => isActive.value ? height.value : 0),\n      elementSize: height,\n      active: isActive,\n      absolute: toRef(props, 'absolute'),\n    })\n\n    useGroup(props, VBtnToggleSymbol)\n\n    provideDefaults({\n      VBtn: {\n        color: toRef(props, 'color'),\n        density: toRef(props, 'density'),\n        stacked: computed(() => props.mode !== 'horizontal'),\n        variant: 'text',\n      },\n    }, { scoped: true })\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-bottom-navigation',\n            {\n              'v-bottom-navigation--active': isActive.value,\n              'v-bottom-navigation--grow': props.grow,\n              'v-bottom-navigation--shift': props.mode === 'shift',\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            layoutItemStyles.value,\n            {\n              height: convertToUnit(height.value),\n              transform: `translateY(${convertToUnit(!isActive.value ? 100 : 0, '%')})`,\n            },\n          ]}\n        >\n          { slots.default && (\n            <div class=\"v-bottom-navigation__content\">\n              { slots.default() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBottomNavigation = InstanceType<typeof VBottomNavigation>\n"],
  "mappings": "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",
  "names": ["VBottomNavigation", "defineComponent", "name", "props", "bgColor", "String", "color", "grow", "Boolean", "mode", "type", "validator", "v", "includes", "height", "Number", "default", "makeBorderProps", "makeDensityProps", "makeElevationProps", "makeRoundedProps", "makeLayoutItemProps", "makeTagProps", "tag", "makeGroupProps", "modelValue", "selectedClass", "makeThemeProps", "emits", "value", "setup", "slots", "themeClasses", "useTheme", "borderClasses", "useBorder", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "densityClasses", "useDensity", "elevationClasses", "useElevation", "roundedClasses", "useRounded", "computed", "density", "isActive", "useProxiedModel", "layoutItemStyles", "useLayoutItem", "id", "order", "parseInt", "position", "layoutSize", "elementSize", "active", "absolute", "useGroup", "VBtnToggleSymbol", "provideDefaults", "VBtn", "stacked", "variant", "scoped", "useRender", "convertToUnit", "transform"]
}
